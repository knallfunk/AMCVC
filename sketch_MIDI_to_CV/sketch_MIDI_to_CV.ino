/*
Get MIDI message and transform them into Hexa numbers driving a 12 bits DAC
*/

//const variables
const int midiInput = 2;
const int UARTOut = 3;
const int ledPin = 6;

const byte midiMessageBuffer[16] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0};
const byte midiNoteBuffer[16] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0};
const byte midiVelocityBuffer[16] = {0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0};

const int bufferPosition = 0;
const int bufferReadingPosition = 0;

//MIDI specific table
const byte noteOff = 0x80;
const byte noteOn =  0x90;
const byte aftertouch = 0xA0;
const byte cc = 0xB0;
const byte patchRange = 0xC0;
const byte channelPressure = 0xD0;
const byte pitchBend = 0xE0;
const byte sysexStart = 0xF0;
	
const byte sysexStop = 0xF7;
const byte clock = 0xF8;
const byte startSeq = 0xFA;
const byte contSeq = 0xFB;
const byte stopSeq = 0xFC;

void setup()
{
 Serial.begin(31250);
 pinMode(midiInput, INPUT);
 pinMode(UARTOut, OUTPUT);
 pinMode(ledPin, OUTPUT);
}

void loop()
{
 if(Serial.available())
 {
   MIDI.read();
 } 
 
  
}
